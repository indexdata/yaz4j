<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.yaz4j</groupId>
  <artifactId>yaz4j</artifactId>
  <version>1.6-SNAPSHOT</version>
  <packaging>jar</packaging>

  <!-- Project Information -->
  <name>yaz4j</name>
  <url>http://www.indexdata.com/yaz4j/</url>
  <inceptionYear>2008</inceptionYear>
  <licenses>
    <license>
      <name>BSD</name>
      <url>http://www.opensource.org/licenses/BSD-3-Clause</url>
    </license>
  </licenses>
  <description>Java wrapper for the ZOOM API of YAZ</description>

  <organization>
    <name>Index Data</name>
  </organization>

  <developers>
    <developer>
      <name>Rob Styles</name>
      <id>rob</id>
      <email>Rob.Styles@talis.com</email>
      <organization>Talis</organization>
      <organizationUrl>http://www.talis.com/</organizationUrl>
      <roles />
      <timezone />
    </developer>
    <developer>
      <name>Adam Dickmeiss</name>
      <id>adam</id>
      <email>adam@indexdata.dk</email>
      <organization>Index Data</organization>
      <organizationUrl>http://www.indexdata.com/</organizationUrl>
      <roles />
      <timezone />
    </developer>
    <developer>
      <name>Jakub Skoczen</name>
      <id>jakub</id>
      <email>jakub@indexdata.dk</email>
      <organization>Index Data</organization>
      <organizationUrl>http://www.indexdata.com/</organizationUrl>
      <roles />
      <timezone />
    </developer>
    <developer>
      <name>Juan Cayetano</name>
      <id>cayetano</id>
      <email>juancayetano.delgado@gmail.com</email>
      <organization />
      <organizationUrl />
      <roles />
      <timezone />
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>3.3.4</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>3.3.4</version>
      </extension>
    </extensions> 

    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>generate-sources</id>
            <phase>generate-sources</phase>
            <inherited>false</inherited>
            <configuration>
              <target>
                <echo message="Using include: ${yaz.include}" />
                <mkdir dir="target/generated-sources/java/org/yaz4j/jni" />
                <mkdir dir="target/generated-sources/native" />
                <exec executable="${swig}">
                  <arg value="-Isrc/main/native" />
                  <arg value="${yaz.include}" />
                  <arg value="-outdir" />
                  <arg value="${basedir}/target/generated-sources/java/org/yaz4j/jni" />
                  <arg value="-package" />
                  <arg value="org.yaz4j.jni" />
                  <arg value="-o" />
                  <arg value="${basedir}/target/generated-sources/native/libyaz4j.cpp" />
                  <arg value="-c++" />
                  <arg value="-java" />
                  <arg value="src/main/swig/libyaz4j.i" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <forkMode>once</forkMode>
          <workingDirectory>target</workingDirectory>
          <argLine>-Djava.library.path=${project.build.directory}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.9.1</version>
        <executions>
          <execution>
            <id>include-generated-sources</id>
            <phase>generate-sources</phase>
            <goals><goal>add-source</goal></goals>
            <configuration>
              <sources><source>target/generated-sources/java</source></sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.8</source>
          <target>1.8</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>org.yaz4j.ZoomCLI</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <profiles>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <platform>linux</platform>
        <!-- yaz-config executable -->
        <yaz.config>yaz-config</yaz.config>
	<swig>swig</swig>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>write-swig-include</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <exec executable="${yaz.config}" outputproperty="yaz-config.include" errorproperty="yaz-config.error">
                      <arg value="--include" />
                    </exec>
                    <echo message="yaz-config error (if any): ${yaz-config.error}" />
                    <condition property="yaz.include" value="-I/usr/include" else="${yaz-config.include}">
                      <equals arg1="${yaz-config.include}" arg2="" />
                    </condition>
                    <echo message="YAZ INCLUDE=${yaz.include}" />
                    <exec executable="${yaz.config}" outputproperty="yaz.libs" errorproperty="yaz-config.error">
                      <arg value="--libs" />
                    </exec>
                    <echo message="yaz-config error (if any): ${yaz-config.error}" />
                    <echo message="YAZ LIBS=${yaz.libs}" />
                    <mkdir dir="${basedir}/target" />
                    <echo file="${basedir}/target/swig.properties" message="yaz.include=${yaz.include}"/>
                    <propertyfile file="${basedir}/target/swig.properties" comment="YAZ COMPILER/LINKER FLAGS">
                      <entry key="yaz.include" value="${yaz.include}" />
                      <entry key="yaz.libs" value="${yaz.libs}" />
                    </propertyfile>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin> 
            <groupId>org.codehaus.mojo</groupId> 
            <artifactId>properties-maven-plugin</artifactId> 
            <version>1.0-alpha-1</version> 
            <executions> 
              <execution> 
                <id>read-swig-config</id> 
                <phase>initialize</phase> 
                <goals> 
                  <goal>read-project-properties</goal> 
                </goals> 
                <configuration> 
                  <files> 
                    <file>${basedir}/target/swig.properties</file> 
                  </files> 
                </configuration> 
              </execution> 
            </executions> 
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>compile-zoom-extra</id>
                <phase>compile</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>g++</executable>
                  <arguments>
                    <argument>-fPIC</argument>
                    <argument>-Wno-deprecated-declarations</argument>
                    <argument>-I${java.home}/include</argument>
                    <argument>${yaz.include}</argument>
                    <argument>-c</argument>
                    <argument>${basedir}/src/main/native/zoom-extra.cpp</argument>
                    <argument>-o</argument>
                    <argument>${basedir}/target/zoom-extra.o</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>compile-libyaz4j</id>
                <phase>compile</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>g++</executable>
                  <arguments>
                    <argument>-fPIC</argument>
                    <argument>-Wno-deprecated-declarations</argument>
                    <argument>-I${java.home}/include</argument>
                    <argument>-I${java.home}/include/linux</argument>
                    <argument>-I${java.home}/include/linux</argument>
                    <argument>-I${basedir}/src/main/native</argument>
                    <argument>${yaz.include}</argument>
                    <argument>-c</argument>
                    <argument>${basedir}/target/generated-sources/native/libyaz4j.cpp</argument>
                    <argument>-o</argument>
                    <argument>${basedir}/target/libyaz4j.o</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>compile-combined</id>
                <phase>compile</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>g++</executable>
                  <commandlineArgs>-shared -o ${basedir}/target/libyaz4j.so ${basedir}/target/libyaz4j.o ${basedir}/target/zoom-extra.o ${yaz.libs}</commandlineArgs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>

