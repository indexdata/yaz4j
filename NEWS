--- 1.6.0 2021/01/02

* One pom.xml instead of 4. The consequence is that yaz4j uses
maven-antrun-plugin to run yaz-config, swig, compilers etc. However,
we'll have to figure out compilation options ourselves. Only Windows
and Linux supported now.

* yaz4j no longer uses finalize. This makes it more difficult to prevent
leaks for ZOOM objects such as Record. To ease the use of the API, most
objects supports Closeable interface. Connections manages result sets,
scan sets and packages. Result sets manages returned records.. This means
that in normal operations users of the API will primarily just have to
do RAII for Connection. Rest will be taken care of. Query is a standalone
managed object in YAZ. It will never be stored in object state, just
constructed temporarily. If a closed object is used, IllegalStateException
is thrown.

* PrefixQuery and CQLQuery may throw ZoomException.

* Native shared object may be bundled with jar. Enable with profile `bundle`.

--- 1.5 2015/05/21

* breaking API change: Package#send throws ZoomException
* add ConnectionExtended tests

--- 1.4 2014/06/26

* bugfix: fix multiple JVM segv on null pointers
* API: ScanSet is iterable
* API: Connection is closeable
* build: support Oracle JVM on OS X
* build: support older YAZ5 releases on Debian/Ubuntu

--- 1.3 2013/04/16

* new API class: Query (CQLQuery, PrefixQuery) allows sorting prior to search,
  adds CQL scan queries
* new API method: ResultSet#sort allows sort after search
* new API method: ResultSet#getRecords allows fething records in bundles
* API sugar: ResultSet is now iterable
* API deprecation: string arg versions of Connection#search and Connection#scan
  are now deprecated
* win32/64 build files included in the source (requires Windows SDK)
* improved API docs

Bug fixes:

* avoid redundant buffer copies in Record#get
* memory leak in Connection#search


--- 1.2 2010/04/22

Changes to the API:

* add Connection close that shutdowns socket without destroying the object
* rename ResultSet getSize to getHitCount

Bug fixes:

* #3115 - fix JVM crash when fetching records in unsupported syntax caused
  by null ptr dereference, handle record errors during search and in-record 
  errors
* properly deallocate records not managed by a result set


--- 1.1 2010/02/22

Major changes to the API:

* using Java naming conventions
* simplified/removed less used classes
* using standard Java container types instead of of binded natives
* use checked exceptions for all app/protocol layer errors

Major changes to the code layout, using Maven to manage build.

Bug fixes:

* #3122 - out of memory bug caused by ResultSet using memory proportional 
  to the number of hits

--- 1.0 2009/09/22

Initial version after receiving the code from Talis.

Added JUnit test cases. 
